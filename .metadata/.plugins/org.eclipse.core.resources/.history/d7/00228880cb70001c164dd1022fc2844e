import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Enumeration;

public class BuscarIP {

	public static void main(String[] args) throws UnknownHostException {
		
		ip3();
	}
	public static void ip3() throws UnknownHostException {
		 InetAddress ip;
		    try {
		        Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();
		        while (interfaces.hasMoreElements()) {
		            NetworkInterface iface = interfaces.nextElement();
		            // filters out 127.0.0.1 and inactive interfaces
		            if (iface.isLoopback() || !iface.isUp())
		                continue;

		            Enumeration<InetAddress> addresses = iface.getInetAddresses();
		            while(addresses.hasMoreElements()) {
		                InetAddress addr = addresses.nextElement();
		                ip = InetAddress.getLocalHost();
		                System.out.println( " " + ip);
		            }
		        }
		    } catch (SocketException e) {
		        throw new RuntimeException(e);
		    }
	}
	
	
	public static void ip2() {
		InetAddress ia = null;
		try {
		ia = InetAddress.getLocalHost();
		} catch (UnknownHostException e) {
		e.printStackTrace();
		}

		System.out.println("IP: " + ia.getHostAddress());
		System.out.println("Nome: " + ia.getHostName());
	}
	
	public static void ip() {
		Enumeration nis = null;
		try {
		nis = NetworkInterface.getNetworkInterfaces();
		} catch (SocketException e) {
		e.printStackTrace();
		}
		while (nis.hasMoreElements()) {
		NetworkInterface ni = (NetworkInterface) nis.nextElement();
		Enumeration ias = ni.getInetAddresses();
		while (ias.hasMoreElements()) {
		InetAddress ia = (InetAddress) ias.nextElement();
		System.out.println(ni.getName() + " -> ip: " + ia.getHostAddress() + " - hostname: " + ia.getHostName());
		}
		}
	}

}
